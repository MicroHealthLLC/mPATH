version: '3.8'

networks:
  app_network:  
services:
  app:
    build:
      context: .  
      dockerfile: docker/app/Dockerfile
    container_name: app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      PUMA_PORT: 3000
      RAILS_MAX_THREADS: 5
      RAILS_MIN_THREADS: 5
      WEB_CONCURRENCY: 2
      PUMA_PIDFILE: /app/tmp/pids/server.pid
      PUMA_SSL_HOST: 0.0.0.0
      PUMA_SSL_KEY_FILE: /etc/ssl/private/server.key
      PUMA_SSL_CERT_FILE: /etc/ssl/certs/server.crt
      PUMA_SSL_VERIFY_MODE: non
      DATABASE_URL: mysql2://mpath_user:mpath_pass@mysql/mpath
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
  
    networks:
      - app_network  
    command: >
      sh -c "bin/rails db:migrate RAILS_ENV=production && bin/rails server -b 0.0.0.0"
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: mpath
      MYSQL_USER: mpath_user
      MYSQL_PASSWORD: mpath_pass
      MYSQL_ROOT_PASSWORD: root_pass
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 3
      timeout: 5s
    networks:
      - app_network 

  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app_network  

networks:
  app_network:
