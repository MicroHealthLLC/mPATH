Style/AlignParameters:
  # Alignment of parameters in multi-line method calls.
  #
  # The `with_first_parameter` style aligns the following lines along the same
  # column as the first parameter.
  #
  #     method_call(a,
  #                 b)
  #
  # The `with_fixed_indentation` style aligns the following lines with one
  # level of indentation relative to the start of the line with the method call.
  #
  #     method_call(a,
  #       b)
  EnforcedStyle: with_fixed_indentation
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation

Style/BracesAroundHashParameters:
  EnforcedStyle: context_dependent
  SupportedStyles:
    # The `braces` style enforces braces around all method parameters that are
    # hashes.
    - braces
    # The `no_braces` style checks that the last parameter doesn't have braces
    # around it.
    - no_braces
    # The `context_dependent` style checks that the last parameter doesn't have
    # braces around it, but requires braces if the second to last parameter is
    # also a hash literal.
    - context_dependent

# Indentation of `when`.
Style/CaseIndentation:
  IndentWhenRelativeTo: end
  SupportedStyles:
    - case
    - end
  IndentOneStep: false

Style/ClassAndModuleChildren:
  # Checks the style of children definitions at classes and modules.
  #
  # Basically there are two different styles:
  #
  # `nested` - have each child on a separate line
  #   class Foo
  #     class Bar
  #     end
  #   end
  #
  # `compact` - combine definitions as much as possible
  #   class Foo::Bar
  #   end
  #
  # The compact style is only forced, for classes / modules with one child.
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact
  Enabled: false

Style/CommandLiteral:
  EnforcedStyle: mixed
  # backticks: Always use backticks.
  # percent_x: Always use %x.
  # mixed: Use backticks on single-line commands, and %x on multi-line commands.
  SupportedStyles:
    - backticks
    - percent_x
    - mixed
  # If false, the cop will always recommend using %x if one or more backticks
  # are found in the command string.
  AllowInnerBackticks: false

Style/HashSyntax:
  EnforcedStyle: hash_rockets
  SupportedStyles:
    - ruby19
    - hash_rockets

# Checks the indentation of the first element in an array literal.
Style/IndentArray:
  # The value `special_inside_parentheses` means that array literals with
  # brackets that have their opening bracket on the same line as a surrounding
  # opening round parenthesis, shall have their first element indented relative
  # to the first position inside the parenthesis.
  #
  # The value `consistent` means that the indentation of the first element shall
  # always be relative to the first position of the line where the opening
  # bracket is.
  #
  # The value `align_brackets` means that the indentation of the first element
  # shall always be relative to the position of the opening bracket.
  EnforcedStyle: consistent
  SupportedStyles:
    - special_inside_parentheses
    - consistent
    - align_brackets
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

# Checks the indentation of the first key in a hash literal.
Style/IndentHash:
  # The value `special_inside_parentheses` means that hash literals with braces
  # that have their opening brace on the same line as a surrounding opening
  # round parenthesis, shall have their first key indented relative to the
  # first position inside the parenthesis.
  # The value `consistent` means that the indentation of the first key shall
  # always be relative to the first position of the line where the opening
  # brace is.
  EnforcedStyle: consistent
  SupportedStyles:
    - special_inside_parentheses
    - consistent

Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Style/MultilineOperationIndentation:
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented

Style/SymbolProc:
  IgnoredMethods:
    - proc
    - respond_to

# Enforces: "Provide an exception class and message as arguments to raise."
# Overly restrictive when testing ActiveRecord errors
# EG: ActiveRecord::RecordInvalid.new(model_with_errs) doesn't take a message
Style/RaiseArgs:
  Enabled: false

##################### Metrics #############################

Metrics/ClassLength:
  CountComments: false  # count full line comments?
  Max: 100
  Enabled: false

Metrics/MethodLength:
  CountComments: false  # count full line comments?
  Max: 10
  Enabled: false

Metrics/LineLength:
  Max: 120

##################### Lint ################################

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  Enabled: false

##################### Performance #########################

# Performance improvement is negligible and the readability is poor. See:
# https://github.com/bbatsov/rubocop/issues/2614
Performance/Casecmp:
  Enabled: false

##################### Rails ###############################

Rails/ActionFilter:
  Description: 'Enforces consistent use of action filter methods.'
  Enabled: false
